{"version":3,"sources":["components/app-header/app-header.js","components/item-status-filter/item-status-filter.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/add-item-form/add-item-form.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","ItemStatusFilter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentActive","buttons","filter","title","_this$props","props","onFilterChange","map","button","onClick","type","key","Component","SearchPanel","searchPredicate","onSearchChange","target","value","setState","onChange","placeholder","item_status_filter_ItemStatusFilter","TodoListItem","label","important","onDeleted","onToggleImportant","onToggleDone","classNames","TodoList","items","elements","item","id","restItems","objectWithoutProperties","todo_list_item_TodoListItem","assign","AddItemForm","onAdded","e","preventDefault","clearLabel","onLabelChange","onSubmit","App","createTodoItem","Math","ceil","random","todoData","deleteItem","addItem","newItem","_ref2","concat","toConsumableArray","toggleProperty","arr","propName","idx","findIndex","oldItem","objectSpread","defineProperty","slice","_ref3","_ref4","search","term","toLocaleLowerCase","includes","_this$state","visibleData","todoCount","reduce","acc","currentVal","doneCount","length","app_header","search_panel_SearchPanel","todo_list_todo_list","add_item_form_AddItemForm","ReactDOM","render","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.95b8042e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <div className=\"row no-gutters justify-content-between align-items-baseline\">\r\n            <h1>Todo list</h1>\r\n            <h5 className=\"text-secondary\">{toDo} more to do, {done} done</h5>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentActive: 'All'\r\n        };\r\n\r\n        this.buttons = [\r\n            {\r\n                filter: 'all',\r\n                title: 'All'\r\n            },\r\n            {\r\n                filter: 'active',\r\n                title: 'Active'\r\n            },\r\n            {\r\n                filter: 'done',\r\n                title: 'Done'\r\n            },\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map((button) => {\r\n            let className = button.filter === filter\r\n                ? `btn btn-info`\r\n                : `btn btn-outline-secondary`;\r\n\r\n            return (\r\n                <button\r\n                    onClick={() => onFilterChange(button.filter)}\r\n                    className={className}\r\n                    type=\"button\"\r\n                    key={button.filter}>\r\n                    {button.title}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"item-status-filter btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            searchPredicate: ''\r\n        };\r\n\r\n        this.onSearchChange = ({target}) => {\r\n            const searchPredicate = target.value;\r\n            this.setState({\r\n                searchPredicate\r\n            });\r\n            this.props.onSearchChange(searchPredicate);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const searchText = 'Type here to search';\r\n\r\n        const {searchPredicate} = this.state;\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        return (\r\n            <div className=\"search-panel d-flex mt-3\">\r\n                <div className=\"search-panel-input mr-1\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        onChange={this.onSearchChange}\r\n                        placeholder={searchText}\r\n                        value={searchPredicate}\r\n                        type=\"text\"/>\r\n                </div>\r\n                <ItemStatusFilter\r\n                    onFilterChange={onFilterChange}\r\n                    filter={filter} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n    render() {\r\n        const {\r\n            label,\r\n            done,\r\n            important,\r\n            onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone\r\n        } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important) {\r\n            classNames += ` important`\r\n        }\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className={ classNames }\r\n                     onClick={ onToggleDone }>\r\n                    <span className=\"todo-list-item-label\">{ label }</span>\r\n                </div>\r\n\r\n                <div className=\"todo-list-item-actions\">\r\n                    <button className=\"btn btn-sm btn-outline-danger mr-1\"\r\n                            onClick={onDeleted}>\r\n                        <i className=\"fa fa-trash fa-fw\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-sm btn-outline-success\"\r\n                            onClick={ onToggleImportant }>\r\n                        <i className=\"fa fa-exclamation fa-fw\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({\r\n                      items,\r\n                      onDeleted,\r\n                      onToggleImportant,\r\n                      onToggleDone\r\n                  }) => {\r\n    const elements = items.map((item) => {\r\n        const {id, ...restItems} = item;\r\n\r\n        return (\r\n            <li\r\n                className=\"list-group-item\"\r\n                key={ id }>\r\n                <TodoListItem\r\n                    { ...restItems }\r\n                    onDeleted={ () => onDeleted(id) }\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleDone={ () => onToggleDone(id) }/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list mt-3\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import React, {Component} from 'react';\r\nimport './add-item-form.css';\r\n\r\nexport default class AddItemForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            label: ''\r\n        };\r\n\r\n        this.onAdded = (e) => {\r\n            e.preventDefault();\r\n            if (!this.state.label) return;\r\n            this.props.onAdded(this.state.label);\r\n            this.clearLabel();\r\n        };\r\n\r\n        this.clearLabel = () => {\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        };\r\n\r\n        this.onLabelChange = (e) => {\r\n            this.setState({\r\n                label: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"add-item-form text-center mt-3 d-flex\"\r\n                  onSubmit={this.onAdded}>\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       value={this.state.label}\r\n                       placeholder=\"What needs to be done\"\r\n                       onChange={this.onLabelChange}/>\r\n                <button\r\n                    className=\"btn btn-outline-secondary ml-1\"\r\n                    type=\"submit\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport AddItemForm from '../add-item-form/add-item-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        function generateRandomId() {\r\n            return Math.ceil(Math.random() * 1000000);\r\n        }\r\n\r\n        function createTodoItem(label) {\r\n            return {\r\n                label,\r\n                important: false,\r\n                id: generateRandomId()\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            todoData: [\r\n                createTodoItem('Learn React'),\r\n                createTodoItem('Build awesome app'),\r\n                createTodoItem('Drink coffee')\r\n            ],\r\n            searchPredicate: '',\r\n            filter: 'all' // active, all, done\r\n        };\r\n\r\n        this.deleteItem = (id) => {\r\n            this.setState(({todoData}) => {\r\n                return {\r\n                    todoData: todoData.filter((item) => item.id !== id)\r\n                }\r\n            });\r\n        };\r\n\r\n        this.addItem = (label) => {\r\n            let newItem = createTodoItem(label);\r\n\r\n            this.setState(({todoData}) => {\r\n                let newData = [\r\n                    ...todoData,\r\n                    newItem\r\n                ];\r\n\r\n                return {\r\n                    todoData: newData\r\n                }\r\n            });\r\n        };\r\n\r\n        this.toggleProperty = (arr, id, propName) => {\r\n            const idx = arr.findIndex((item) => item.id === id);\r\n\r\n            const oldItem = arr[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                [propName]: !oldItem[propName]\r\n            };\r\n\r\n            return [\r\n                ...arr.slice(0, idx),\r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ]\r\n        };\r\n\r\n        this.onToggleDone = (id) => {\r\n            this.setState(({todoData}) => {\r\n                return {\r\n                    todoData: this.toggleProperty(todoData, id, 'done')\r\n                }\r\n            });\r\n        };\r\n\r\n        this.onToggleImportant = (id) => {\r\n            this.setState(({todoData}) => {\r\n                return {\r\n                    todoData: this.toggleProperty(todoData, id, 'important')\r\n                }\r\n            });\r\n        };\r\n\r\n        this.onSearchChange = (searchPredicate) => {\r\n            this.setState({\r\n                searchPredicate\r\n            });\r\n        };\r\n\r\n        this.search = (items, term) => {\r\n            if (term === '') return items;\r\n\r\n            return items.filter((item) =>\r\n                item.label.toLocaleLowerCase().includes(\r\n                    term.toLocaleLowerCase()\r\n                )\r\n            );\r\n        };\r\n\r\n        this.filter = (items, filter) => {\r\n            switch (filter) {\r\n                case 'all':\r\n                    return items;\r\n                case 'active':\r\n                    return items.filter((item) => !item.done);\r\n                case 'done':\r\n                    return items.filter((item) => item.done);\r\n                default:\r\n                    return items;\r\n            }\r\n        };\r\n\r\n        this.onFilterChange = (filter) => {\r\n            this.setState({\r\n                filter\r\n            });\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {todoData, searchPredicate, filter} = this.state;\r\n\r\n        const visibleData = this.filter(\r\n            this.search(todoData, searchPredicate),\r\n            filter\r\n        );\r\n\r\n        const todoCount = todoData.reduce((acc, currentVal) => {\r\n            if (!currentVal.done) acc++;\r\n            return acc;\r\n        }, 0);\r\n\r\n        const doneCount = todoData.length - todoCount;\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 offset-sm-3\">\r\n                    <AppHeader\r\n                        toDo={todoCount}\r\n                        done={doneCount}/>\r\n                    <SearchPanel\r\n                        filter={ filter }\r\n                        onFilterChange={this.onFilterChange}\r\n                        onSearchChange={ this.onSearchChange } />\r\n                    <TodoList\r\n                        items={visibleData}\r\n                        onDeleted={ this.deleteItem }\r\n                        onToggleImportant={ this.onToggleImportant }\r\n                        onToggleDone={ this.onToggleDone }/>\r\n                    <AddItemForm onAdded={ this.addItem }/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}